{"version":3,"sources":["components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","Login","error","useState","name","email","password","details","setDetails","onSubmit","e","preventDefault","className","htmlFor","type","id","onChange","target","value","App","adminUser","user","setUser","setError","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAwDeA,EAtDG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAAW,EACJC,mBAAS,CAACC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KADrC,mBAC3BC,EAD2B,KAClBC,EADkB,KAQlC,OACI,sBAAMC,SANY,SAACC,GACnBA,EAAEC,iBACFV,EAAMM,IAIN,SACI,sBAAKK,UAAU,aAAf,UACI,uCACA,sBAAKA,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,mBAGA,uBAAOC,KAAK,OACLV,KAAK,OACLW,GAAG,OACHC,SAAU,SAACN,GAAD,OAAOF,EAAW,2BAAID,GAAL,IAAcH,KAAMM,EAAEO,OAAOC,UACxDA,MAAOX,EAAQH,UAE1B,sBAAKQ,UAAU,aAAf,UACI,uBAAOC,QAAQ,QAAf,oBAGA,uBAAOC,KAAK,QACLV,KAAK,QACLW,GAAG,QACHC,SAAU,SAACN,GAAD,OAAOF,EAAW,2BAAID,GAAL,IAAcF,MAAOK,EAAEO,OAAOC,UACzDA,MAAOX,EAAQF,WAE1B,sBAAKO,UAAU,aAAf,UACI,uBAAOC,QAAQ,WAAf,uBAGA,uBAAOC,KAAK,WACLV,KAAK,WACLW,GAAG,WACHC,SAAU,SAACN,GAAD,OAAOF,EAAW,2BAAID,GAAL,IAAcD,SAAUI,EAAEO,OAAOC,UAC5DA,MAAOX,EAAQD,cAEzBJ,GACD,qBAAKU,UAAU,QAAf,SACKV,IAGL,uBAAOY,KAAK,SACLI,MAAM,gBCLdC,MA1Cf,WACI,IAAMC,EACK,kBADLA,EAEQ,WAHH,EAMajB,mBAAS,CAACC,KAAM,GAAIC,MAAO,KANxC,mBAMJgB,EANI,KAMEC,EANF,OAOenB,mBAAS,IAPxB,mBAOJD,EAPI,KAOGqB,EAPH,KAyBX,OACI,qBAAKX,UAAU,MAAf,SACqB,KAAfS,EAAKhB,MAEF,sBAAKO,UAAU,UAAf,UACG,2CAAa,+BAAOS,EAAKjB,UACzB,wBAAQoB,QAVT,WACXF,EAAQ,CAAClB,KAAM,GAAIC,MAAO,MASd,uBAGH,8BACG,cAAC,EAAD,CAAWJ,MA1Bb,SAACM,GACPA,EAAQF,QAAUe,GAAmBb,EAAQD,WAAac,GAC1DE,EAAQ,CACJlB,KAAMG,EAAQH,KACdC,MAAOE,EAAQF,QAEnBkB,EAAS,KAETA,EAAS,QAAD,OAASH,EAAT,cAA8BA,EAA9B,OAkByBlB,MAAOA,SC1BrCuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e9155dc.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst LoginForm = ({Login, error}) => {\n    const [details, setDetails] = useState({name: '', email: '', password: ''})\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        Login(details)\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"form-inner\">\n                <h2>Login</h2>\n                <div className='form-group'>\n                    <label htmlFor=\"name\">\n                        Name:\n                    </label>\n                    <input type=\"text\"\n                           name=\"name\"\n                           id=\"name\"\n                           onChange={(e) => setDetails({...details, name: e.target.value})}\n                           value={details.name}/>\n                </div>\n                <div className='form-group'>\n                    <label htmlFor=\"email\">\n                        Email:\n                    </label>\n                    <input type=\"email\"\n                           name=\"email\"\n                           id=\"email\"\n                           onChange={(e) => setDetails({...details, email: e.target.value})}\n                           value={details.email}/>\n                </div>\n                <div className='form-group'>\n                    <label htmlFor=\"password\">\n                        Password:\n                    </label>\n                    <input type=\"password\"\n                           name=\"password\"\n                           id=\"password\"\n                           onChange={(e) => setDetails({...details, password: e.target.value})}\n                           value={details.password}/>\n                </div>\n                {error &&\n                <div className='error'>\n                    {error}\n                </div>\n                }\n                <input type=\"submit\"\n                       value=\"LOGIN\"/>\n            </div>\n        </form>\n    );\n};\n\nexport default LoginForm;","import React, {useState} from \"react\";\nimport LoginForm from \"./components/LoginForm\";\n\nfunction App() {\n    const adminUser = {\n        email: 'admin@admin.com',\n        password: 'admin123'\n    }\n\n    const [user, setUser] = useState({name: '', email: ''})\n    const [error, setError] = useState('')\n\n    const Login = (details) => {\n        if (details.email === adminUser.email && details.password === adminUser.password) {\n            setUser({\n                name: details.name,\n                email: details.email\n            })\n            setError('')\n        } else {\n            setError(`Use \"${adminUser.email}\" \"${adminUser.password}\"`)\n        }\n    }\n\n    const Logout = () => {\n        setUser({name: '', email: ''});\n    }\n\n    return (\n        <div className=\"App\">\n            {(user.email !== '')\n                ?\n                (<div className='welcome'>\n                    <h2>Welcome, <span>{user.name}</span></h2>\n                    <button onClick={Logout}>Logout</button>\n                </div>)\n                :\n                (<div>\n                    <LoginForm Login={Login} error={error}/>\n                </div>)\n            }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}